@model MvcTask.Models.ListGen

 @helper Truncate(string input, int length)
{
      if (input.Length <= length) {
           @input
      } else {
           @input.Substring(0, length)<text>...</text>
      }
}

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>ListGen</legend>
        
        @Html.HiddenFor(model => model.ListGenId)

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name )
            @Html.ValidationMessageFor(model => model.Name)
        </div>
 
        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description )
            @Html.ValidationMessageFor(model => model.Description)
        </div>    

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
    <p>
         @Html.ActionLink("Create New", "Create", "StoreTask", new { id = Model.ListGenId })
    </p>
    <table>
 <tr>
    <th>
       Name
     </th>
    <th>
     Deadline
    </th>
      <th>
   Priority
    </th>

    <th></th>
  </tr>
@foreach (var item in Model.Tasks)
{ 
    <tr>
        <td>
            @Truncate(item.Name, 25)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Deadline)
        </td>
      <td>
     @Truncate(item.Priority, 25)
 </td>
  <td>
     @Html.ActionLink("Edit", "Edit", new { id=item.TaskId }) | @Html.ActionLink("Delete", "Delete", new { id=item.TaskId })
 </td>
    </tr>
 
}
</table>

}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
